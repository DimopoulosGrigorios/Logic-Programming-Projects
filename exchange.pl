%_________________________________________2.0____________________________________________
%________________________________________________________________________________________

%========================================================================================================================================================
power(A,0,1):-!.
power(A,B,O):-C is B -1,power(A,C,O1),O is O1*A.
%========================================================================================================================================================

%========================================================================================================================================================
%take a number and make it list inverted
reverse1(0,[]):-!.
reverse1(A,B):-B1 is A mod 10,A1 is integer((A-B1)/10),reverse1(A1,B2),append([B1],B2,B).
%========================================================================================================================================================

%========================================================================================================================================================
%make the list number again
reverse2([],0):-!.
reverse2([A],A):-!.
reverse2([A|Rest],B):-reverse2(Rest,B1),length(Rest,Ln),power(10,Ln,Pw),B is Pw*A+B1.
%========================================================================================================================================================

%========================================================================================================================================================
reverse_final(A,B):-reverse1(A,B1),reverse2(B1,B).
%========================================================================================================================================================

%========================================================================================================================================================
%find the maximum sum of two numbers that can  be switch places(but reversed).To 1 kai to mhden dhlwnei allagh prosimou
%gia tis diafores periptwseis.

find_max_list([],0,_).
find_max_list([A],A,_).
find_max_list([A,B],Out,0):-Out1 is A-B,reverse_final(A,A1),reverse_final(B,B1),Out2 is B1-A1,max(Out1,Out2,Out).
find_max_list([A,B],Out,1):-Out1 is -A+B,reverse_final(A,A1),reverse_final(B,B1),Out2 is -B1+A1,max(Out1,Out2,Out).
%========================================================================================================================================================


%========================================================================================================================================================
exchange1([],0,_).
exchange1([A],B,N):-power(-1,N,P),B is A*P.
exchange1([A,B],Out,N):-find_max_list([A,B],Out,N).

exchange1([A,B,C|Rest],Out,N):-	power(-1,N,P),NN is (N+1) mod 2,
exchange1([A,B],Out1,N),exchange1([B,C],Out2,NN),
exchange1([C|Rest],OutR,N),exchange1(Rest,OutR2,NN),
AA is (Out1+OutR),CC is (Out2+P*A+OutR2),
Out is max(AA,CC).
%========================================================================================================================================================

%========================================================================================================================================================
exchange(A,B):-exchange1(A,B,0).
%========================================================================================================================================================